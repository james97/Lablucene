package zheng.py;

/**
 * DO NOT EDIT THIS FILE!
 * 
 * Generated by Barrister Idl2Java: https://github.com/coopernurse/barrister-java
 * 
 * Generated at: Mon Dec 10 23:50:21 EST 2012
 */
public class PredictorClient implements Predictor {

    private com.bitmechanic.barrister.Transport _trans;

    public PredictorClient(com.bitmechanic.barrister.Transport trans) {
        trans.getContract().setPackage("zheng.py");
        this._trans = trans;
    }

    public Double predict(String inst_str) throws com.bitmechanic.barrister.RpcException {
        Object _params = new Object[] { inst_str };
        com.bitmechanic.barrister.RpcRequest _req = new com.bitmechanic.barrister.RpcRequest(java.util.UUID.randomUUID().toString(), "Predictor.predict", _params);
        com.bitmechanic.barrister.RpcResponse _resp = this._trans.request(_req);
        if (_resp == null) {
            return null;
        }
        else if (_resp.getError() == null) {
            return (Double)_resp.getResult();
        }
        else {
            throw _resp.getError();
        }
    }

}

